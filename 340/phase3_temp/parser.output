Terminals unused in grammar

   COMMENT
   COMMENT2
   OTHER
   LEFT_SBRANCKET
   RIGHT_SBRANCKET
   LEFT_CBRANCKET
   RIGHT_CBRANCKET


State 99 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: statements

    2 statements: stmt statements
    3           | %empty

    4 stmt: expr SEMICOLON
    5     | ifstmt
    6     | whilestmt
    7     | forstmt
    8     | returnstmt
    9     | BREAK SEMICOLON
   10     | CONTINUE SEMICOLON
   11     | block
   12     | funcdef
   13     | SEMICOLON

   14 expr: assignexpr
   15     | expr PLUS expr
   16     | expr MINUS expr
   17     | expr MULTI expr
   18     | expr DIV expr
   19     | expr MOD expr
   20     | expr AND expr
   21     | expr OR expr
   22     | expr EQUAL expr
   23     | expr NEQUAL expr
   24     | expr GREATER expr
   25     | expr LESS expr
   26     | expr GREATER_EQUAL expr
   27     | expr LESS_EQUAL expr
   28     | term

   29 $@1: %empty

   30 assignexpr: lvalue $@1 ASSIGN expr

   31 term: LEFT_PARENTHES expr RIGHT_PARENTHES
   32     | primary
   33     | MINUS expr
   34     | PPLUS lvalue

   35 $@2: %empty

   36 term: lvalue $@2 PPLUS
   37     | MMINUS lvalue

   38 $@3: %empty

   39 term: lvalue $@3 MMINUS
   40     | NOT expr

   41 primary: lvalue
   42        | call
   43        | objectdef
   44        | LEFT_PARENTHES funcdef RIGHT_PARENTHES
   45        | const

   46 const: NUMBER
   47      | REALNUM
   48      | STRING
   49      | TRUE
   50      | FALSE
   51      | NIL

   52 lvalue: ID
   53       | LOCAL ID
   54       | DCOLON ID
   55       | member

   56 member: lvalue DOT ID
   57       | lvalue LEFT_SBRACKET expr RIGHT_SBRACKET
   58       | call DOT ID
   59       | call LEFT_SBRACKET expr RIGHT_SBRACKET

   60 call: call LEFT_PARENTHES elist RIGHT_PARENTHES
   61     | lvalue callsuffix
   62     | LEFT_PARENTHES funcdef RIGHT_PARENTHES LEFT_PARENTHES elist RIGHT_PARENTHES

   63 callsuffix: normcall
   64           | methodcall

   65 normcall: LEFT_PARENTHES elist RIGHT_PARENTHES

   66 $@4: %empty

   67 methodcall: DOTS ID $@4 LEFT_PARENTHES elist RIGHT_PARENTHES

   68 elist: expr cexprs
   69      | %empty

   70 cexprs: COMMA expr cexprs
   71       | %empty

   72 objectdef: LEFT_SBRACKET elist RIGHT_SBRACKET
   73          | LEFT_SBRACKET indexed RIGHT_SBRACKET

   74 indexed: indexedelem clindexedelem

   75 clindexedelem: COMMA indexedelem clindexedelem
   76              | %empty

   77 indexedelem: LEFT_CBRACKET expr COLON expr RIGHT_CBRACKET

   78 block: LEFT_CBRACKET RIGHT_CBRACKET

   79 $@5: %empty

   80 block: LEFT_CBRACKET $@5 stmt statements RIGHT_CBRACKET

   81 $@6: %empty

   82 $@7: %empty

   83 $@8: %empty

   84 funcdef: FUNCTION $@6 LEFT_PARENTHES $@7 idlist RIGHT_PARENTHES $@8 block

   85 $@9: %empty

   86 $@10: %empty

   87 $@11: %empty

   88 funcdef: FUNCTION ID $@9 LEFT_PARENTHES $@10 idlist RIGHT_PARENTHES $@11 block

   89 $@12: %empty

   90 idlist: ID $@12 cidlist
   91       | %empty

   92 $@13: %empty

   93 cidlist: COMMA ID $@13 cidlist
   94        | %empty

   95 ifstmt: ifstart stmt

   96 $@14: %empty

   97 ifstmt: ifstart stmt ELSE $@14 stmt

   98 ifstart: IF LEFT_PARENTHES expr RIGHT_PARENTHES

   99 $@15: %empty

  100 $@16: %empty

  101 whilestmt: WHILE LEFT_PARENTHES $@15 expr RIGHT_PARENTHES $@16 stmt

  102 $@17: %empty

  103 $@18: %empty

  104 $@19: %empty

  105 forstmt: FOR LEFT_PARENTHES elist SEMICOLON $@17 expr SEMICOLON $@18 elist RIGHT_PARENTHES $@19 stmt

  106 returnstmt: RETURN expr SEMICOLON
  107           | RETURN SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256)
IF (258) 98
ELSE (259) 97
WHILE (260) 101
FOR (261) 105
FUNCTION (262) 84 88
RETURN (263) 106 107
BREAK (264) 9
CONTINUE (265) 10
LOCAL (266) 53
TRUE (267) 49
FALSE (268) 50
NIL (269) 51
NOT (270) 40
AND (271) 20
OR (272) 21
ASSIGN (273) 30
PLUS (274) 15
MINUS (275) 16 33
MULTI (276) 17
DIV (277) 18
MOD (278) 19
EQUAL (279) 22
NEQUAL (280) 23
PPLUS (281) 34 36
MMINUS (282) 37 39
GREATER (283) 24
LESS (284) 25
GREATER_EQUAL (285) 26
LESS_EQUAL (286) 27
NUMBER (287) 46
REALNUM (288) 47
ID (289) 52 53 54 56 58 67 88 90 93
STRING (290) 48
LEFT_CBRACKET (291) 77 78 80
RIGHT_CBRACKET (292) 77 78 80
LEFT_SBRACKET (293) 57 59 72 73
RIGHT_SBRACKET (294) 57 59 72 73
LEFT_PARENTHES (295) 31 44 60 62 65 67 84 88 98 101 105
RIGHT_PARENTHES (296) 31 44 60 62 65 67 84 88 98 101 105
SEMICOLON (297) 4 9 10 13 105 106 107
COMMA (298) 70 75 93
COLON (299) 77
DCOLON (300) 54
DOT (301) 56 58
DOTS (302) 67
COMMENT (303)
COMMENT2 (304)
OTHER (305)
UMINUS (306)
LEFT_SBRANCKET (307)
RIGHT_SBRANCKET (308)
LEFT_CBRANCKET (309)
RIGHT_CBRANCKET (310)


Nonterminals, with rules where they appear

$accept (56)
    on left: 0
program (57)
    on left: 1, on right: 0
statements (58)
    on left: 2 3, on right: 1 2 80
stmt (59)
    on left: 4 5 6 7 8 9 10 11 12 13, on right: 2 80 95 97 101 105
expr (60)
    on left: 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28, on right:
    4 15 16 17 18 19 20 21 22 23 24 25 26 27 30 31 33 40 57 59 68 70
    77 98 101 105 106
assignexpr (61)
    on left: 30, on right: 14
$@1 (62)
    on left: 29, on right: 30
term (63)
    on left: 31 32 33 34 36 37 39 40, on right: 28
$@2 (64)
    on left: 35, on right: 36
$@3 (65)
    on left: 38, on right: 39
primary (66)
    on left: 41 42 43 44 45, on right: 32
const (67)
    on left: 46 47 48 49 50 51, on right: 45
lvalue (68)
    on left: 52 53 54 55, on right: 30 34 36 37 39 41 56 57 61
member (69)
    on left: 56 57 58 59, on right: 55
call (70)
    on left: 60 61 62, on right: 42 58 59 60
callsuffix (71)
    on left: 63 64, on right: 61
normcall (72)
    on left: 65, on right: 63
methodcall (73)
    on left: 67, on right: 64
$@4 (74)
    on left: 66, on right: 67
elist (75)
    on left: 68 69, on right: 60 62 65 67 72 105
cexprs (76)
    on left: 70 71, on right: 68 70
objectdef (77)
    on left: 72 73, on right: 43
indexed (78)
    on left: 74, on right: 73
clindexedelem (79)
    on left: 75 76, on right: 74 75
indexedelem (80)
    on left: 77, on right: 74 75
block (81)
    on left: 78 80, on right: 11 84 88
$@5 (82)
    on left: 79, on right: 80
funcdef (83)
    on left: 84 88, on right: 12 44 62
$@6 (84)
    on left: 81, on right: 84
$@7 (85)
    on left: 82, on right: 84
$@8 (86)
    on left: 83, on right: 84
$@9 (87)
    on left: 85, on right: 88
$@10 (88)
    on left: 86, on right: 88
$@11 (89)
    on left: 87, on right: 88
idlist (90)
    on left: 90 91, on right: 84 88
$@12 (91)
    on left: 89, on right: 90
cidlist (92)
    on left: 93 94, on right: 90 93
$@13 (93)
    on left: 92, on right: 93
ifstmt (94)
    on left: 95 97, on right: 5
$@14 (95)
    on left: 96, on right: 97
ifstart (96)
    on left: 98, on right: 95 97
whilestmt (97)
    on left: 101, on right: 6
$@15 (98)
    on left: 99, on right: 101
$@16 (99)
    on left: 100, on right: 101
forstmt (100)
    on left: 105, on right: 7
$@17 (101)
    on left: 102, on right: 105
$@18 (102)
    on left: 103, on right: 105
$@19 (103)
    on left: 104, on right: 105
returnstmt (104)
    on left: 106 107, on right: 8


State 0

    0 $accept: . program $end

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    FOR             shift, and go to state 3
    FUNCTION        shift, and go to state 4
    RETURN          shift, and go to state 5
    BREAK           shift, and go to state 6
    CONTINUE        shift, and go to state 7
    LOCAL           shift, and go to state 8
    TRUE            shift, and go to state 9
    FALSE           shift, and go to state 10
    NIL             shift, and go to state 11
    NOT             shift, and go to state 12
    MINUS           shift, and go to state 13
    PPLUS           shift, and go to state 14
    MMINUS          shift, and go to state 15
    NUMBER          shift, and go to state 16
    REALNUM         shift, and go to state 17
    ID              shift, and go to state 18
    STRING          shift, and go to state 19
    LEFT_CBRACKET   shift, and go to state 20
    LEFT_SBRACKET   shift, and go to state 21
    LEFT_PARENTHES  shift, and go to state 22
    SEMICOLON       shift, and go to state 23
    DCOLON          shift, and go to state 24

    $default  reduce using rule 3 (statements)

    program     go to state 25
    statements  go to state 26
    stmt        go to state 27
    expr        go to state 28
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    block       go to state 37
    funcdef     go to state 38
    ifstmt      go to state 39
    ifstart     go to state 40
    whilestmt   go to state 41
    forstmt     go to state 42
    returnstmt  go to state 43


State 1

   98 ifstart: IF . LEFT_PARENTHES expr RIGHT_PARENTHES

    LEFT_PARENTHES  shift, and go to state 44


State 2

  101 whilestmt: WHILE . LEFT_PARENTHES $@15 expr RIGHT_PARENTHES $@16 stmt

    LEFT_PARENTHES  shift, and go to state 45


State 3

  105 forstmt: FOR . LEFT_PARENTHES elist SEMICOLON $@17 expr SEMICOLON $@18 elist RIGHT_PARENTHES $@19 stmt

    LEFT_PARENTHES  shift, and go to state 46


State 4

   84 funcdef: FUNCTION . $@6 LEFT_PARENTHES $@7 idlist RIGHT_PARENTHES $@8 block
   88        | FUNCTION . ID $@9 LEFT_PARENTHES $@10 idlist RIGHT_PARENTHES $@11 block

    ID  shift, and go to state 47

    $default  reduce using rule 81 ($@6)

    $@6  go to state 48


State 5

  106 returnstmt: RETURN . expr SEMICOLON
  107           | RETURN . SEMICOLON

    LOCAL           shift, and go to state 8
    TRUE            shift, and go to state 9
    FALSE           shift, and go to state 10
    NIL             shift, and go to state 11
    NOT             shift, and go to state 12
    MINUS           shift, and go to state 13
    PPLUS           shift, and go to state 14
    MMINUS          shift, and go to state 15
    NUMBER          shift, and go to state 16
    REALNUM         shift, and go to state 17
    ID              shift, and go to state 18
    STRING          shift, and go to state 19
    LEFT_SBRACKET   shift, and go to state 21
    LEFT_PARENTHES  shift, and go to state 22
    SEMICOLON       shift, and go to state 49
    DCOLON          shift, and go to state 24

    expr        go to state 50
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36


State 6

    9 stmt: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 51


State 7

   10 stmt: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 52


State 8

   53 lvalue: LOCAL . ID

    ID  shift, and go to state 53


State 9

   49 const: TRUE .

    $default  reduce using rule 49 (const)


State 10

   50 const: FALSE .

    $default  reduce using rule 50 (const)


State 11

   51 const: NIL .

    $default  reduce using rule 51 (const)


State 12

   40 term: NOT . expr

    LOCAL           shift, and go to state 8
    TRUE            shift, and go to state 9
    FALSE           shift, and go to state 10
    NIL             shift, and go to state 11
    NOT             shift, and go to state 12
    MINUS           shift, and go to state 13
    PPLUS           shift, and go to state 14
    MMINUS          shift, and go to state 15
    NUMBER          shift, and go to state 16
    REALNUM         shift, and go to state 17
    ID              shift, and go to state 18
    STRING          shift, and go to state 19
    LEFT_SBRACKET   shift, and go to state 21
    LEFT_PARENTHES  shift, and go to state 22
    DCOLON          shift, and go to state 24

    expr        go to state 54
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36


State 13

   33 term: MINUS . expr

    LOCAL           shift, and go to state 8
    TRUE            shift, and go to state 9
    FALSE           shift, and go to state 10
    NIL             shift, and go to state 11
    NOT             shift, and go to state 12
    MINUS           shift, and go to state 13
    PPLUS           shift, and go to state 14
    MMINUS          shift, and go to state 15
    NUMBER          shift, and go to state 16
    REALNUM         shift, and go to state 17
    ID              shift, and go to state 18
    STRING          shift, and go to state 19
    LEFT_SBRACKET   shift, and go to state 21
    LEFT_PARENTHES  shift, and go to state 22
    DCOLON          shift, and go to state 24

    expr        go to state 55
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36


State 14

   34 term: PPLUS . lvalue

    LOCAL           shift, and go to state 8
    ID              shift, and go to state 18
    LEFT_PARENTHES  shift, and go to state 56
    DCOLON          shift, and go to state 24

    lvalue  go to state 57
    member  go to state 34
    call    go to state 58


State 15

   37 term: MMINUS . lvalue

    LOCAL           shift, and go to state 8
    ID              shift, and go to state 18
    LEFT_PARENTHES  shift, and go to state 56
    DCOLON          shift, and go to state 24

    lvalue  go to state 59
    member  go to state 34
    call    go to state 58


State 16

   46 const: NUMBER .

    $default  reduce using rule 46 (const)


State 17

   47 const: REALNUM .

    $default  reduce using rule 47 (const)


State 18

   52 lvalue: ID .

    $default  reduce using rule 52 (lvalue)


State 19

   48 const: STRING .

    $default  reduce using rule 48 (const)


State 20

   78 block: LEFT_CBRACKET . RIGHT_CBRACKET
   80      | LEFT_CBRACKET . $@5 stmt statements RIGHT_CBRACKET

    RIGHT_CBRACKET  shift, and go to state 60

    $default  reduce using rule 79 ($@5)

    $@5  go to state 61


State 21

   72 objectdef: LEFT_SBRACKET . elist RIGHT_SBRACKET
   73          | LEFT_SBRACKET . indexed RIGHT_SBRACKET

    LOCAL           shift, and go to state 8
    TRUE            shift, and go to state 9
    FALSE           shift, and go to state 10
    NIL             shift, and go to state 11
    NOT             shift, and go to state 12
    MINUS           shift, and go to state 13
    PPLUS           shift, and go to state 14
    MMINUS          shift, and go to state 15
    NUMBER          shift, and go to state 16
    REALNUM         shift, and go to state 17
    ID              shift, and go to state 18
    STRING          shift, and go to state 19
    LEFT_CBRACKET   shift, and go to state 62
    LEFT_SBRACKET   shift, and go to state 21
    LEFT_PARENTHES  shift, and go to state 22
    DCOLON          shift, and go to state 24

    $default  reduce using rule 69 (elist)

    expr         go to state 63
    assignexpr   go to state 29
    term         go to state 30
    primary      go to state 31
    const        go to state 32
    lvalue       go to state 33
    member       go to state 34
    call         go to state 35
    elist        go to state 64
    objectdef    go to state 36
    indexed      go to state 65
    indexedelem  go to state 66


State 22

   31 term: LEFT_PARENTHES . expr RIGHT_PARENTHES
   44 primary: LEFT_PARENTHES . funcdef RIGHT_PARENTHES
   62 call: LEFT_PARENTHES . funcdef RIGHT_PARENTHES LEFT_PARENTHES elist RIGHT_PARENTHES

    FUNCTION        shift, and go to state 4
    LOCAL           shift, and go to state 8
    TRUE            shift, and go to state 9
    FALSE           shift, and go to state 10
    NIL             shift, and go to state 11
    NOT             shift, and go to state 12
    MINUS           shift, and go to state 13
    PPLUS           shift, and go to state 14
    MMINUS          shift, and go to state 15
    NUMBER          shift, and go to state 16
    REALNUM         shift, and go to state 17
    ID              shift, and go to state 18
    STRING          shift, and go to state 19
    LEFT_SBRACKET   shift, and go to state 21
    LEFT_PARENTHES  shift, and go to state 22
    DCOLON          shift, and go to state 24

    expr        go to state 67
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    funcdef     go to state 68


State 23

   13 stmt: SEMICOLON .

    $default  reduce using rule 13 (stmt)


State 24

   54 lvalue: DCOLON . ID

    ID  shift, and go to state 69


State 25

    0 $accept: program . $end

    $end  shift, and go to state 70


State 26

    1 program: statements .

    $default  reduce using rule 1 (program)


State 27

    2 statements: stmt . statements

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    FOR             shift, and go to state 3
    FUNCTION        shift, and go to state 4
    RETURN          shift, and go to state 5
    BREAK           shift, and go to state 6
    CONTINUE        shift, and go to state 7
    LOCAL           shift, and go to state 8
    TRUE            shift, and go to state 9
    FALSE           shift, and go to state 10
    NIL             shift, and go to state 11
    NOT             shift, and go to state 12
    MINUS           shift, and go to state 13
    PPLUS           shift, and go to state 14
    MMINUS          shift, and go to state 15
    NUMBER          shift, and go to state 16
    REALNUM         shift, and go to state 17
    ID              shift, and go to state 18
    STRING          shift, and go to state 19
    LEFT_CBRACKET   shift, and go to state 20
    LEFT_SBRACKET   shift, and go to state 21
    LEFT_PARENTHES  shift, and go to state 22
    SEMICOLON       shift, and go to state 23
    DCOLON          shift, and go to state 24

    $default  reduce using rule 3 (statements)

    statements  go to state 71
    stmt        go to state 27
    expr        go to state 28
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    block       go to state 37
    funcdef     go to state 38
    ifstmt      go to state 39
    ifstart     go to state 40
    whilestmt   go to state 41
    forstmt     go to state 42
    returnstmt  go to state 43


State 28

    4 stmt: expr . SEMICOLON
   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTI expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . AND expr
   21     | expr . OR expr
   22     | expr . EQUAL expr
   23     | expr . NEQUAL expr
   24     | expr . GREATER expr
   25     | expr . LESS expr
   26     | expr . GREATER_EQUAL expr
   27     | expr . LESS_EQUAL expr

    AND            shift, and go to state 72
    OR             shift, and go to state 73
    PLUS           shift, and go to state 74
    MINUS          shift, and go to state 75
    MULTI          shift, and go to state 76
    DIV            shift, and go to state 77
    MOD            shift, and go to state 78
    EQUAL          shift, and go to state 79
    NEQUAL         shift, and go to state 80
    GREATER        shift, and go to state 81
    LESS           shift, and go to state 82
    GREATER_EQUAL  shift, and go to state 83
    LESS_EQUAL     shift, and go to state 84
    SEMICOLON      shift, and go to state 85


State 29

   14 expr: assignexpr .

    $default  reduce using rule 14 (expr)


State 30

   28 expr: term .

    $default  reduce using rule 28 (expr)


State 31

   32 term: primary .

    $default  reduce using rule 32 (term)


State 32

   45 primary: const .

    $default  reduce using rule 45 (primary)


State 33

   30 assignexpr: lvalue . $@1 ASSIGN expr
   36 term: lvalue . $@2 PPLUS
   39     | lvalue . $@3 MMINUS
   41 primary: lvalue .
   56 member: lvalue . DOT ID
   57       | lvalue . LEFT_SBRACKET expr RIGHT_SBRACKET
   61 call: lvalue . callsuffix

    LEFT_SBRACKET   shift, and go to state 86
    LEFT_PARENTHES  shift, and go to state 87
    DOT             shift, and go to state 88
    DOTS            shift, and go to state 89

    ASSIGN    reduce using rule 29 ($@1)
    PPLUS     reduce using rule 35 ($@2)
    MMINUS    reduce using rule 38 ($@3)
    $default  reduce using rule 41 (primary)

    $@1         go to state 90
    $@2         go to state 91
    $@3         go to state 92
    callsuffix  go to state 93
    normcall    go to state 94
    methodcall  go to state 95


State 34

   55 lvalue: member .

    $default  reduce using rule 55 (lvalue)


State 35

   42 primary: call .
   58 member: call . DOT ID
   59       | call . LEFT_SBRACKET expr RIGHT_SBRACKET
   60 call: call . LEFT_PARENTHES elist RIGHT_PARENTHES

    LEFT_SBRACKET   shift, and go to state 96
    LEFT_PARENTHES  shift, and go to state 97
    DOT             shift, and go to state 98

    $default  reduce using rule 42 (primary)


State 36

   43 primary: objectdef .

    $default  reduce using rule 43 (primary)


State 37

   11 stmt: block .

    $default  reduce using rule 11 (stmt)


State 38

   12 stmt: funcdef .

    $default  reduce using rule 12 (stmt)


State 39

    5 stmt: ifstmt .

    $default  reduce using rule 5 (stmt)


State 40

   95 ifstmt: ifstart . stmt
   97       | ifstart . stmt ELSE $@14 stmt

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    FOR             shift, and go to state 3
    FUNCTION        shift, and go to state 4
    RETURN          shift, and go to state 5
    BREAK           shift, and go to state 6
    CONTINUE        shift, and go to state 7
    LOCAL           shift, and go to state 8
    TRUE            shift, and go to state 9
    FALSE           shift, and go to state 10
    NIL             shift, and go to state 11
    NOT             shift, and go to state 12
    MINUS           shift, and go to state 13
    PPLUS           shift, and go to state 14
    MMINUS          shift, and go to state 15
    NUMBER          shift, and go to state 16
    REALNUM         shift, and go to state 17
    ID              shift, and go to state 18
    STRING          shift, and go to state 19
    LEFT_CBRACKET   shift, and go to state 20
    LEFT_SBRACKET   shift, and go to state 21
    LEFT_PARENTHES  shift, and go to state 22
    SEMICOLON       shift, and go to state 23
    DCOLON          shift, and go to state 24

    stmt        go to state 99
    expr        go to state 28
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    block       go to state 37
    funcdef     go to state 38
    ifstmt      go to state 39
    ifstart     go to state 40
    whilestmt   go to state 41
    forstmt     go to state 42
    returnstmt  go to state 43


State 41

    6 stmt: whilestmt .

    $default  reduce using rule 6 (stmt)


State 42

    7 stmt: forstmt .

    $default  reduce using rule 7 (stmt)


State 43

    8 stmt: returnstmt .

    $default  reduce using rule 8 (stmt)


State 44

   98 ifstart: IF LEFT_PARENTHES . expr RIGHT_PARENTHES

    LOCAL           shift, and go to state 8
    TRUE            shift, and go to state 9
    FALSE           shift, and go to state 10
    NIL             shift, and go to state 11
    NOT             shift, and go to state 12
    MINUS           shift, and go to state 13
    PPLUS           shift, and go to state 14
    MMINUS          shift, and go to state 15
    NUMBER          shift, and go to state 16
    REALNUM         shift, and go to state 17
    ID              shift, and go to state 18
    STRING          shift, and go to state 19
    LEFT_SBRACKET   shift, and go to state 21
    LEFT_PARENTHES  shift, and go to state 22
    DCOLON          shift, and go to state 24

    expr        go to state 100
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36


State 45

  101 whilestmt: WHILE LEFT_PARENTHES . $@15 expr RIGHT_PARENTHES $@16 stmt

    $default  reduce using rule 99 ($@15)

    $@15  go to state 101


State 46

  105 forstmt: FOR LEFT_PARENTHES . elist SEMICOLON $@17 expr SEMICOLON $@18 elist RIGHT_PARENTHES $@19 stmt

    LOCAL           shift, and go to state 8
    TRUE            shift, and go to state 9
    FALSE           shift, and go to state 10
    NIL             shift, and go to state 11
    NOT             shift, and go to state 12
    MINUS           shift, and go to state 13
    PPLUS           shift, and go to state 14
    MMINUS          shift, and go to state 15
    NUMBER          shift, and go to state 16
    REALNUM         shift, and go to state 17
    ID              shift, and go to state 18
    STRING          shift, and go to state 19
    LEFT_SBRACKET   shift, and go to state 21
    LEFT_PARENTHES  shift, and go to state 22
    DCOLON          shift, and go to state 24

    $default  reduce using rule 69 (elist)

    expr        go to state 63
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 102
    objectdef   go to state 36


State 47

   88 funcdef: FUNCTION ID . $@9 LEFT_PARENTHES $@10 idlist RIGHT_PARENTHES $@11 block

    $default  reduce using rule 85 ($@9)

    $@9  go to state 103


State 48

   84 funcdef: FUNCTION $@6 . LEFT_PARENTHES $@7 idlist RIGHT_PARENTHES $@8 block

    LEFT_PARENTHES  shift, and go to state 104


State 49

  107 returnstmt: RETURN SEMICOLON .

    $default  reduce using rule 107 (returnstmt)


State 50

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTI expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . AND expr
   21     | expr . OR expr
   22     | expr . EQUAL expr
   23     | expr . NEQUAL expr
   24     | expr . GREATER expr
   25     | expr . LESS expr
   26     | expr . GREATER_EQUAL expr
   27     | expr . LESS_EQUAL expr
  106 returnstmt: RETURN expr . SEMICOLON

    AND            shift, and go to state 72
    OR             shift, and go to state 73
    PLUS           shift, and go to state 74
    MINUS          shift, and go to state 75
    MULTI          shift, and go to state 76
    DIV            shift, and go to state 77
    MOD            shift, and go to state 78
    EQUAL          shift, and go to state 79
    NEQUAL         shift, and go to state 80
    GREATER        shift, and go to state 81
    LESS           shift, and go to state 82
    GREATER_EQUAL  shift, and go to state 83
    LESS_EQUAL     shift, and go to state 84
    SEMICOLON      shift, and go to state 105


State 51

    9 stmt: BREAK SEMICOLON .

    $default  reduce using rule 9 (stmt)


State 52

   10 stmt: CONTINUE SEMICOLON .

    $default  reduce using rule 10 (stmt)


State 53

   53 lvalue: LOCAL ID .

    $default  reduce using rule 53 (lvalue)


State 54

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTI expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . AND expr
   21     | expr . OR expr
   22     | expr . EQUAL expr
   23     | expr . NEQUAL expr
   24     | expr . GREATER expr
   25     | expr . LESS expr
   26     | expr . GREATER_EQUAL expr
   27     | expr . LESS_EQUAL expr
   40 term: NOT expr .

    $default  reduce using rule 40 (term)


State 55

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTI expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . AND expr
   21     | expr . OR expr
   22     | expr . EQUAL expr
   23     | expr . NEQUAL expr
   24     | expr . GREATER expr
   25     | expr . LESS expr
   26     | expr . GREATER_EQUAL expr
   27     | expr . LESS_EQUAL expr
   33 term: MINUS expr .

    $default  reduce using rule 33 (term)


State 56

   62 call: LEFT_PARENTHES . funcdef RIGHT_PARENTHES LEFT_PARENTHES elist RIGHT_PARENTHES

    FUNCTION  shift, and go to state 4

    funcdef  go to state 106


State 57

   34 term: PPLUS lvalue .
   56 member: lvalue . DOT ID
   57       | lvalue . LEFT_SBRACKET expr RIGHT_SBRACKET
   61 call: lvalue . callsuffix

    LEFT_SBRACKET   shift, and go to state 86
    LEFT_PARENTHES  shift, and go to state 87
    DOT             shift, and go to state 88
    DOTS            shift, and go to state 89

    $default  reduce using rule 34 (term)

    callsuffix  go to state 93
    normcall    go to state 94
    methodcall  go to state 95


State 58

   58 member: call . DOT ID
   59       | call . LEFT_SBRACKET expr RIGHT_SBRACKET
   60 call: call . LEFT_PARENTHES elist RIGHT_PARENTHES

    LEFT_SBRACKET   shift, and go to state 96
    LEFT_PARENTHES  shift, and go to state 97
    DOT             shift, and go to state 98


State 59

   37 term: MMINUS lvalue .
   56 member: lvalue . DOT ID
   57       | lvalue . LEFT_SBRACKET expr RIGHT_SBRACKET
   61 call: lvalue . callsuffix

    LEFT_SBRACKET   shift, and go to state 86
    LEFT_PARENTHES  shift, and go to state 87
    DOT             shift, and go to state 88
    DOTS            shift, and go to state 89

    $default  reduce using rule 37 (term)

    callsuffix  go to state 93
    normcall    go to state 94
    methodcall  go to state 95


State 60

   78 block: LEFT_CBRACKET RIGHT_CBRACKET .

    $default  reduce using rule 78 (block)


State 61

   80 block: LEFT_CBRACKET $@5 . stmt statements RIGHT_CBRACKET

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    FOR             shift, and go to state 3
    FUNCTION        shift, and go to state 4
    RETURN          shift, and go to state 5
    BREAK           shift, and go to state 6
    CONTINUE        shift, and go to state 7
    LOCAL           shift, and go to state 8
    TRUE            shift, and go to state 9
    FALSE           shift, and go to state 10
    NIL             shift, and go to state 11
    NOT             shift, and go to state 12
    MINUS           shift, and go to state 13
    PPLUS           shift, and go to state 14
    MMINUS          shift, and go to state 15
    NUMBER          shift, and go to state 16
    REALNUM         shift, and go to state 17
    ID              shift, and go to state 18
    STRING          shift, and go to state 19
    LEFT_CBRACKET   shift, and go to state 20
    LEFT_SBRACKET   shift, and go to state 21
    LEFT_PARENTHES  shift, and go to state 22
    SEMICOLON       shift, and go to state 23
    DCOLON          shift, and go to state 24

    stmt        go to state 107
    expr        go to state 28
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    block       go to state 37
    funcdef     go to state 38
    ifstmt      go to state 39
    ifstart     go to state 40
    whilestmt   go to state 41
    forstmt     go to state 42
    returnstmt  go to state 43


State 62

   77 indexedelem: LEFT_CBRACKET . expr COLON expr RIGHT_CBRACKET

    LOCAL           shift, and go to state 8
    TRUE            shift, and go to state 9
    FALSE           shift, and go to state 10
    NIL             shift, and go to state 11
    NOT             shift, and go to state 12
    MINUS           shift, and go to state 13
    PPLUS           shift, and go to state 14
    MMINUS          shift, and go to state 15
    NUMBER          shift, and go to state 16
    REALNUM         shift, and go to state 17
    ID              shift, and go to state 18
    STRING          shift, and go to state 19
    LEFT_SBRACKET   shift, and go to state 21
    LEFT_PARENTHES  shift, and go to state 22
    DCOLON          shift, and go to state 24

    expr        go to state 108
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36


State 63

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTI expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . AND expr
   21     | expr . OR expr
   22     | expr . EQUAL expr
   23     | expr . NEQUAL expr
   24     | expr . GREATER expr
   25     | expr . LESS expr
   26     | expr . GREATER_EQUAL expr
   27     | expr . LESS_EQUAL expr
   68 elist: expr . cexprs

    AND            shift, and go to state 72
    OR             shift, and go to state 73
    PLUS           shift, and go to state 74
    MINUS          shift, and go to state 75
    MULTI          shift, and go to state 76
    DIV            shift, and go to state 77
    MOD            shift, and go to state 78
    EQUAL          shift, and go to state 79
    NEQUAL         shift, and go to state 80
    GREATER        shift, and go to state 81
    LESS           shift, and go to state 82
    GREATER_EQUAL  shift, and go to state 83
    LESS_EQUAL     shift, and go to state 84
    COMMA          shift, and go to state 109

    $default  reduce using rule 71 (cexprs)

    cexprs  go to state 110


State 64

   72 objectdef: LEFT_SBRACKET elist . RIGHT_SBRACKET

    RIGHT_SBRACKET  shift, and go to state 111


State 65

   73 objectdef: LEFT_SBRACKET indexed . RIGHT_SBRACKET

    RIGHT_SBRACKET  shift, and go to state 112


State 66

   74 indexed: indexedelem . clindexedelem

    COMMA  shift, and go to state 113

    $default  reduce using rule 76 (clindexedelem)

    clindexedelem  go to state 114


State 67

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTI expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . AND expr
   21     | expr . OR expr
   22     | expr . EQUAL expr
   23     | expr . NEQUAL expr
   24     | expr . GREATER expr
   25     | expr . LESS expr
   26     | expr . GREATER_EQUAL expr
   27     | expr . LESS_EQUAL expr
   31 term: LEFT_PARENTHES expr . RIGHT_PARENTHES

    AND              shift, and go to state 72
    OR               shift, and go to state 73
    PLUS             shift, and go to state 74
    MINUS            shift, and go to state 75
    MULTI            shift, and go to state 76
    DIV              shift, and go to state 77
    MOD              shift, and go to state 78
    EQUAL            shift, and go to state 79
    NEQUAL           shift, and go to state 80
    GREATER          shift, and go to state 81
    LESS             shift, and go to state 82
    GREATER_EQUAL    shift, and go to state 83
    LESS_EQUAL       shift, and go to state 84
    RIGHT_PARENTHES  shift, and go to state 115


State 68

   44 primary: LEFT_PARENTHES funcdef . RIGHT_PARENTHES
   62 call: LEFT_PARENTHES funcdef . RIGHT_PARENTHES LEFT_PARENTHES elist RIGHT_PARENTHES

    RIGHT_PARENTHES  shift, and go to state 116


State 69

   54 lvalue: DCOLON ID .

    $default  reduce using rule 54 (lvalue)


State 70

    0 $accept: program $end .

    $default  accept


State 71

    2 statements: stmt statements .

    $default  reduce using rule 2 (statements)


State 72

   20 expr: expr AND . expr

    LOCAL           shift, and go to state 8
    TRUE            shift, and go to state 9
    FALSE           shift, and go to state 10
    NIL             shift, and go to state 11
    NOT             shift, and go to state 12
    MINUS           shift, and go to state 13
    PPLUS           shift, and go to state 14
    MMINUS          shift, and go to state 15
    NUMBER          shift, and go to state 16
    REALNUM         shift, and go to state 17
    ID              shift, and go to state 18
    STRING          shift, and go to state 19
    LEFT_SBRACKET   shift, and go to state 21
    LEFT_PARENTHES  shift, and go to state 22
    DCOLON          shift, and go to state 24

    expr        go to state 117
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36


State 73

   21 expr: expr OR . expr

    LOCAL           shift, and go to state 8
    TRUE            shift, and go to state 9
    FALSE           shift, and go to state 10
    NIL             shift, and go to state 11
    NOT             shift, and go to state 12
    MINUS           shift, and go to state 13
    PPLUS           shift, and go to state 14
    MMINUS          shift, and go to state 15
    NUMBER          shift, and go to state 16
    REALNUM         shift, and go to state 17
    ID              shift, and go to state 18
    STRING          shift, and go to state 19
    LEFT_SBRACKET   shift, and go to state 21
    LEFT_PARENTHES  shift, and go to state 22
    DCOLON          shift, and go to state 24

    expr        go to state 118
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36


State 74

   15 expr: expr PLUS . expr

    LOCAL           shift, and go to state 8
    TRUE            shift, and go to state 9
    FALSE           shift, and go to state 10
    NIL             shift, and go to state 11
    NOT             shift, and go to state 12
    MINUS           shift, and go to state 13
    PPLUS           shift, and go to state 14
    MMINUS          shift, and go to state 15
    NUMBER          shift, and go to state 16
    REALNUM         shift, and go to state 17
    ID              shift, and go to state 18
    STRING          shift, and go to state 19
    LEFT_SBRACKET   shift, and go to state 21
    LEFT_PARENTHES  shift, and go to state 22
    DCOLON          shift, and go to state 24

    expr        go to state 119
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36


State 75

   16 expr: expr MINUS . expr

    LOCAL           shift, and go to state 8
    TRUE            shift, and go to state 9
    FALSE           shift, and go to state 10
    NIL             shift, and go to state 11
    NOT             shift, and go to state 12
    MINUS           shift, and go to state 13
    PPLUS           shift, and go to state 14
    MMINUS          shift, and go to state 15
    NUMBER          shift, and go to state 16
    REALNUM         shift, and go to state 17
    ID              shift, and go to state 18
    STRING          shift, and go to state 19
    LEFT_SBRACKET   shift, and go to state 21
    LEFT_PARENTHES  shift, and go to state 22
    DCOLON          shift, and go to state 24

    expr        go to state 120
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36


State 76

   17 expr: expr MULTI . expr

    LOCAL           shift, and go to state 8
    TRUE            shift, and go to state 9
    FALSE           shift, and go to state 10
    NIL             shift, and go to state 11
    NOT             shift, and go to state 12
    MINUS           shift, and go to state 13
    PPLUS           shift, and go to state 14
    MMINUS          shift, and go to state 15
    NUMBER          shift, and go to state 16
    REALNUM         shift, and go to state 17
    ID              shift, and go to state 18
    STRING          shift, and go to state 19
    LEFT_SBRACKET   shift, and go to state 21
    LEFT_PARENTHES  shift, and go to state 22
    DCOLON          shift, and go to state 24

    expr        go to state 121
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36


State 77

   18 expr: expr DIV . expr

    LOCAL           shift, and go to state 8
    TRUE            shift, and go to state 9
    FALSE           shift, and go to state 10
    NIL             shift, and go to state 11
    NOT             shift, and go to state 12
    MINUS           shift, and go to state 13
    PPLUS           shift, and go to state 14
    MMINUS          shift, and go to state 15
    NUMBER          shift, and go to state 16
    REALNUM         shift, and go to state 17
    ID              shift, and go to state 18
    STRING          shift, and go to state 19
    LEFT_SBRACKET   shift, and go to state 21
    LEFT_PARENTHES  shift, and go to state 22
    DCOLON          shift, and go to state 24

    expr        go to state 122
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36


State 78

   19 expr: expr MOD . expr

    LOCAL           shift, and go to state 8
    TRUE            shift, and go to state 9
    FALSE           shift, and go to state 10
    NIL             shift, and go to state 11
    NOT             shift, and go to state 12
    MINUS           shift, and go to state 13
    PPLUS           shift, and go to state 14
    MMINUS          shift, and go to state 15
    NUMBER          shift, and go to state 16
    REALNUM         shift, and go to state 17
    ID              shift, and go to state 18
    STRING          shift, and go to state 19
    LEFT_SBRACKET   shift, and go to state 21
    LEFT_PARENTHES  shift, and go to state 22
    DCOLON          shift, and go to state 24

    expr        go to state 123
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36


State 79

   22 expr: expr EQUAL . expr

    LOCAL           shift, and go to state 8
    TRUE            shift, and go to state 9
    FALSE           shift, and go to state 10
    NIL             shift, and go to state 11
    NOT             shift, and go to state 12
    MINUS           shift, and go to state 13
    PPLUS           shift, and go to state 14
    MMINUS          shift, and go to state 15
    NUMBER          shift, and go to state 16
    REALNUM         shift, and go to state 17
    ID              shift, and go to state 18
    STRING          shift, and go to state 19
    LEFT_SBRACKET   shift, and go to state 21
    LEFT_PARENTHES  shift, and go to state 22
    DCOLON          shift, and go to state 24

    expr        go to state 124
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36


State 80

   23 expr: expr NEQUAL . expr

    LOCAL           shift, and go to state 8
    TRUE            shift, and go to state 9
    FALSE           shift, and go to state 10
    NIL             shift, and go to state 11
    NOT             shift, and go to state 12
    MINUS           shift, and go to state 13
    PPLUS           shift, and go to state 14
    MMINUS          shift, and go to state 15
    NUMBER          shift, and go to state 16
    REALNUM         shift, and go to state 17
    ID              shift, and go to state 18
    STRING          shift, and go to state 19
    LEFT_SBRACKET   shift, and go to state 21
    LEFT_PARENTHES  shift, and go to state 22
    DCOLON          shift, and go to state 24

    expr        go to state 125
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36


State 81

   24 expr: expr GREATER . expr

    LOCAL           shift, and go to state 8
    TRUE            shift, and go to state 9
    FALSE           shift, and go to state 10
    NIL             shift, and go to state 11
    NOT             shift, and go to state 12
    MINUS           shift, and go to state 13
    PPLUS           shift, and go to state 14
    MMINUS          shift, and go to state 15
    NUMBER          shift, and go to state 16
    REALNUM         shift, and go to state 17
    ID              shift, and go to state 18
    STRING          shift, and go to state 19
    LEFT_SBRACKET   shift, and go to state 21
    LEFT_PARENTHES  shift, and go to state 22
    DCOLON          shift, and go to state 24

    expr        go to state 126
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36


State 82

   25 expr: expr LESS . expr

    LOCAL           shift, and go to state 8
    TRUE            shift, and go to state 9
    FALSE           shift, and go to state 10
    NIL             shift, and go to state 11
    NOT             shift, and go to state 12
    MINUS           shift, and go to state 13
    PPLUS           shift, and go to state 14
    MMINUS          shift, and go to state 15
    NUMBER          shift, and go to state 16
    REALNUM         shift, and go to state 17
    ID              shift, and go to state 18
    STRING          shift, and go to state 19
    LEFT_SBRACKET   shift, and go to state 21
    LEFT_PARENTHES  shift, and go to state 22
    DCOLON          shift, and go to state 24

    expr        go to state 127
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36


State 83

   26 expr: expr GREATER_EQUAL . expr

    LOCAL           shift, and go to state 8
    TRUE            shift, and go to state 9
    FALSE           shift, and go to state 10
    NIL             shift, and go to state 11
    NOT             shift, and go to state 12
    MINUS           shift, and go to state 13
    PPLUS           shift, and go to state 14
    MMINUS          shift, and go to state 15
    NUMBER          shift, and go to state 16
    REALNUM         shift, and go to state 17
    ID              shift, and go to state 18
    STRING          shift, and go to state 19
    LEFT_SBRACKET   shift, and go to state 21
    LEFT_PARENTHES  shift, and go to state 22
    DCOLON          shift, and go to state 24

    expr        go to state 128
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36


State 84

   27 expr: expr LESS_EQUAL . expr

    LOCAL           shift, and go to state 8
    TRUE            shift, and go to state 9
    FALSE           shift, and go to state 10
    NIL             shift, and go to state 11
    NOT             shift, and go to state 12
    MINUS           shift, and go to state 13
    PPLUS           shift, and go to state 14
    MMINUS          shift, and go to state 15
    NUMBER          shift, and go to state 16
    REALNUM         shift, and go to state 17
    ID              shift, and go to state 18
    STRING          shift, and go to state 19
    LEFT_SBRACKET   shift, and go to state 21
    LEFT_PARENTHES  shift, and go to state 22
    DCOLON          shift, and go to state 24

    expr        go to state 129
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36


State 85

    4 stmt: expr SEMICOLON .

    $default  reduce using rule 4 (stmt)


State 86

   57 member: lvalue LEFT_SBRACKET . expr RIGHT_SBRACKET

    LOCAL           shift, and go to state 8
    TRUE            shift, and go to state 9
    FALSE           shift, and go to state 10
    NIL             shift, and go to state 11
    NOT             shift, and go to state 12
    MINUS           shift, and go to state 13
    PPLUS           shift, and go to state 14
    MMINUS          shift, and go to state 15
    NUMBER          shift, and go to state 16
    REALNUM         shift, and go to state 17
    ID              shift, and go to state 18
    STRING          shift, and go to state 19
    LEFT_SBRACKET   shift, and go to state 21
    LEFT_PARENTHES  shift, and go to state 22
    DCOLON          shift, and go to state 24

    expr        go to state 130
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36


State 87

   65 normcall: LEFT_PARENTHES . elist RIGHT_PARENTHES

    LOCAL           shift, and go to state 8
    TRUE            shift, and go to state 9
    FALSE           shift, and go to state 10
    NIL             shift, and go to state 11
    NOT             shift, and go to state 12
    MINUS           shift, and go to state 13
    PPLUS           shift, and go to state 14
    MMINUS          shift, and go to state 15
    NUMBER          shift, and go to state 16
    REALNUM         shift, and go to state 17
    ID              shift, and go to state 18
    STRING          shift, and go to state 19
    LEFT_SBRACKET   shift, and go to state 21
    LEFT_PARENTHES  shift, and go to state 22
    DCOLON          shift, and go to state 24

    $default  reduce using rule 69 (elist)

    expr        go to state 63
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 131
    objectdef   go to state 36


State 88

   56 member: lvalue DOT . ID

    ID  shift, and go to state 132


State 89

   67 methodcall: DOTS . ID $@4 LEFT_PARENTHES elist RIGHT_PARENTHES

    ID  shift, and go to state 133


State 90

   30 assignexpr: lvalue $@1 . ASSIGN expr

    ASSIGN  shift, and go to state 134


State 91

   36 term: lvalue $@2 . PPLUS

    PPLUS  shift, and go to state 135


State 92

   39 term: lvalue $@3 . MMINUS

    MMINUS  shift, and go to state 136


State 93

   61 call: lvalue callsuffix .

    $default  reduce using rule 61 (call)


State 94

   63 callsuffix: normcall .

    $default  reduce using rule 63 (callsuffix)


State 95

   64 callsuffix: methodcall .

    $default  reduce using rule 64 (callsuffix)


State 96

   59 member: call LEFT_SBRACKET . expr RIGHT_SBRACKET

    LOCAL           shift, and go to state 8
    TRUE            shift, and go to state 9
    FALSE           shift, and go to state 10
    NIL             shift, and go to state 11
    NOT             shift, and go to state 12
    MINUS           shift, and go to state 13
    PPLUS           shift, and go to state 14
    MMINUS          shift, and go to state 15
    NUMBER          shift, and go to state 16
    REALNUM         shift, and go to state 17
    ID              shift, and go to state 18
    STRING          shift, and go to state 19
    LEFT_SBRACKET   shift, and go to state 21
    LEFT_PARENTHES  shift, and go to state 22
    DCOLON          shift, and go to state 24

    expr        go to state 137
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36


State 97

   60 call: call LEFT_PARENTHES . elist RIGHT_PARENTHES

    LOCAL           shift, and go to state 8
    TRUE            shift, and go to state 9
    FALSE           shift, and go to state 10
    NIL             shift, and go to state 11
    NOT             shift, and go to state 12
    MINUS           shift, and go to state 13
    PPLUS           shift, and go to state 14
    MMINUS          shift, and go to state 15
    NUMBER          shift, and go to state 16
    REALNUM         shift, and go to state 17
    ID              shift, and go to state 18
    STRING          shift, and go to state 19
    LEFT_SBRACKET   shift, and go to state 21
    LEFT_PARENTHES  shift, and go to state 22
    DCOLON          shift, and go to state 24

    $default  reduce using rule 69 (elist)

    expr        go to state 63
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 138
    objectdef   go to state 36


State 98

   58 member: call DOT . ID

    ID  shift, and go to state 139


State 99

   95 ifstmt: ifstart stmt .
   97       | ifstart stmt . ELSE $@14 stmt

    ELSE  shift, and go to state 140

    ELSE      [reduce using rule 95 (ifstmt)]
    $default  reduce using rule 95 (ifstmt)


State 100

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTI expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . AND expr
   21     | expr . OR expr
   22     | expr . EQUAL expr
   23     | expr . NEQUAL expr
   24     | expr . GREATER expr
   25     | expr . LESS expr
   26     | expr . GREATER_EQUAL expr
   27     | expr . LESS_EQUAL expr
   98 ifstart: IF LEFT_PARENTHES expr . RIGHT_PARENTHES

    AND              shift, and go to state 72
    OR               shift, and go to state 73
    PLUS             shift, and go to state 74
    MINUS            shift, and go to state 75
    MULTI            shift, and go to state 76
    DIV              shift, and go to state 77
    MOD              shift, and go to state 78
    EQUAL            shift, and go to state 79
    NEQUAL           shift, and go to state 80
    GREATER          shift, and go to state 81
    LESS             shift, and go to state 82
    GREATER_EQUAL    shift, and go to state 83
    LESS_EQUAL       shift, and go to state 84
    RIGHT_PARENTHES  shift, and go to state 141


State 101

  101 whilestmt: WHILE LEFT_PARENTHES $@15 . expr RIGHT_PARENTHES $@16 stmt

    LOCAL           shift, and go to state 8
    TRUE            shift, and go to state 9
    FALSE           shift, and go to state 10
    NIL             shift, and go to state 11
    NOT             shift, and go to state 12
    MINUS           shift, and go to state 13
    PPLUS           shift, and go to state 14
    MMINUS          shift, and go to state 15
    NUMBER          shift, and go to state 16
    REALNUM         shift, and go to state 17
    ID              shift, and go to state 18
    STRING          shift, and go to state 19
    LEFT_SBRACKET   shift, and go to state 21
    LEFT_PARENTHES  shift, and go to state 22
    DCOLON          shift, and go to state 24

    expr        go to state 142
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36


State 102

  105 forstmt: FOR LEFT_PARENTHES elist . SEMICOLON $@17 expr SEMICOLON $@18 elist RIGHT_PARENTHES $@19 stmt

    SEMICOLON  shift, and go to state 143


State 103

   88 funcdef: FUNCTION ID $@9 . LEFT_PARENTHES $@10 idlist RIGHT_PARENTHES $@11 block

    LEFT_PARENTHES  shift, and go to state 144


State 104

   84 funcdef: FUNCTION $@6 LEFT_PARENTHES . $@7 idlist RIGHT_PARENTHES $@8 block

    $default  reduce using rule 82 ($@7)

    $@7  go to state 145


State 105

  106 returnstmt: RETURN expr SEMICOLON .

    $default  reduce using rule 106 (returnstmt)


State 106

   62 call: LEFT_PARENTHES funcdef . RIGHT_PARENTHES LEFT_PARENTHES elist RIGHT_PARENTHES

    RIGHT_PARENTHES  shift, and go to state 146


State 107

   80 block: LEFT_CBRACKET $@5 stmt . statements RIGHT_CBRACKET

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    FOR             shift, and go to state 3
    FUNCTION        shift, and go to state 4
    RETURN          shift, and go to state 5
    BREAK           shift, and go to state 6
    CONTINUE        shift, and go to state 7
    LOCAL           shift, and go to state 8
    TRUE            shift, and go to state 9
    FALSE           shift, and go to state 10
    NIL             shift, and go to state 11
    NOT             shift, and go to state 12
    MINUS           shift, and go to state 13
    PPLUS           shift, and go to state 14
    MMINUS          shift, and go to state 15
    NUMBER          shift, and go to state 16
    REALNUM         shift, and go to state 17
    ID              shift, and go to state 18
    STRING          shift, and go to state 19
    LEFT_CBRACKET   shift, and go to state 20
    LEFT_SBRACKET   shift, and go to state 21
    LEFT_PARENTHES  shift, and go to state 22
    SEMICOLON       shift, and go to state 23
    DCOLON          shift, and go to state 24

    $default  reduce using rule 3 (statements)

    statements  go to state 147
    stmt        go to state 27
    expr        go to state 28
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    block       go to state 37
    funcdef     go to state 38
    ifstmt      go to state 39
    ifstart     go to state 40
    whilestmt   go to state 41
    forstmt     go to state 42
    returnstmt  go to state 43


State 108

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTI expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . AND expr
   21     | expr . OR expr
   22     | expr . EQUAL expr
   23     | expr . NEQUAL expr
   24     | expr . GREATER expr
   25     | expr . LESS expr
   26     | expr . GREATER_EQUAL expr
   27     | expr . LESS_EQUAL expr
   77 indexedelem: LEFT_CBRACKET expr . COLON expr RIGHT_CBRACKET

    AND            shift, and go to state 72
    OR             shift, and go to state 73
    PLUS           shift, and go to state 74
    MINUS          shift, and go to state 75
    MULTI          shift, and go to state 76
    DIV            shift, and go to state 77
    MOD            shift, and go to state 78
    EQUAL          shift, and go to state 79
    NEQUAL         shift, and go to state 80
    GREATER        shift, and go to state 81
    LESS           shift, and go to state 82
    GREATER_EQUAL  shift, and go to state 83
    LESS_EQUAL     shift, and go to state 84
    COLON          shift, and go to state 148


State 109

   70 cexprs: COMMA . expr cexprs

    LOCAL           shift, and go to state 8
    TRUE            shift, and go to state 9
    FALSE           shift, and go to state 10
    NIL             shift, and go to state 11
    NOT             shift, and go to state 12
    MINUS           shift, and go to state 13
    PPLUS           shift, and go to state 14
    MMINUS          shift, and go to state 15
    NUMBER          shift, and go to state 16
    REALNUM         shift, and go to state 17
    ID              shift, and go to state 18
    STRING          shift, and go to state 19
    LEFT_SBRACKET   shift, and go to state 21
    LEFT_PARENTHES  shift, and go to state 22
    DCOLON          shift, and go to state 24

    expr        go to state 149
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36


State 110

   68 elist: expr cexprs .

    $default  reduce using rule 68 (elist)


State 111

   72 objectdef: LEFT_SBRACKET elist RIGHT_SBRACKET .

    $default  reduce using rule 72 (objectdef)


State 112

   73 objectdef: LEFT_SBRACKET indexed RIGHT_SBRACKET .

    $default  reduce using rule 73 (objectdef)


State 113

   75 clindexedelem: COMMA . indexedelem clindexedelem

    LEFT_CBRACKET  shift, and go to state 62

    indexedelem  go to state 150


State 114

   74 indexed: indexedelem clindexedelem .

    $default  reduce using rule 74 (indexed)


State 115

   31 term: LEFT_PARENTHES expr RIGHT_PARENTHES .

    $default  reduce using rule 31 (term)


State 116

   44 primary: LEFT_PARENTHES funcdef RIGHT_PARENTHES .
   62 call: LEFT_PARENTHES funcdef RIGHT_PARENTHES . LEFT_PARENTHES elist RIGHT_PARENTHES

    LEFT_PARENTHES  shift, and go to state 151

    $default  reduce using rule 44 (primary)


State 117

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTI expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . AND expr
   20     | expr AND expr .
   21     | expr . OR expr
   22     | expr . EQUAL expr
   23     | expr . NEQUAL expr
   24     | expr . GREATER expr
   25     | expr . LESS expr
   26     | expr . GREATER_EQUAL expr
   27     | expr . LESS_EQUAL expr

    PLUS           shift, and go to state 74
    MINUS          shift, and go to state 75
    MULTI          shift, and go to state 76
    DIV            shift, and go to state 77
    MOD            shift, and go to state 78
    EQUAL          shift, and go to state 79
    NEQUAL         shift, and go to state 80
    GREATER        shift, and go to state 81
    LESS           shift, and go to state 82
    GREATER_EQUAL  shift, and go to state 83
    LESS_EQUAL     shift, and go to state 84

    $default  reduce using rule 20 (expr)


State 118

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTI expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . AND expr
   21     | expr . OR expr
   21     | expr OR expr .
   22     | expr . EQUAL expr
   23     | expr . NEQUAL expr
   24     | expr . GREATER expr
   25     | expr . LESS expr
   26     | expr . GREATER_EQUAL expr
   27     | expr . LESS_EQUAL expr

    PLUS           shift, and go to state 74
    MINUS          shift, and go to state 75
    MULTI          shift, and go to state 76
    DIV            shift, and go to state 77
    MOD            shift, and go to state 78
    EQUAL          shift, and go to state 79
    NEQUAL         shift, and go to state 80
    GREATER        shift, and go to state 81
    LESS           shift, and go to state 82
    GREATER_EQUAL  shift, and go to state 83
    LESS_EQUAL     shift, and go to state 84

    $default  reduce using rule 21 (expr)


State 119

   15 expr: expr . PLUS expr
   15     | expr PLUS expr .
   16     | expr . MINUS expr
   17     | expr . MULTI expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . AND expr
   21     | expr . OR expr
   22     | expr . EQUAL expr
   23     | expr . NEQUAL expr
   24     | expr . GREATER expr
   25     | expr . LESS expr
   26     | expr . GREATER_EQUAL expr
   27     | expr . LESS_EQUAL expr

    MULTI  shift, and go to state 76
    DIV    shift, and go to state 77
    MOD    shift, and go to state 78

    $default  reduce using rule 15 (expr)


State 120

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   16     | expr MINUS expr .
   17     | expr . MULTI expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . AND expr
   21     | expr . OR expr
   22     | expr . EQUAL expr
   23     | expr . NEQUAL expr
   24     | expr . GREATER expr
   25     | expr . LESS expr
   26     | expr . GREATER_EQUAL expr
   27     | expr . LESS_EQUAL expr

    MULTI  shift, and go to state 76
    DIV    shift, and go to state 77
    MOD    shift, and go to state 78

    $default  reduce using rule 16 (expr)


State 121

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTI expr
   17     | expr MULTI expr .
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . AND expr
   21     | expr . OR expr
   22     | expr . EQUAL expr
   23     | expr . NEQUAL expr
   24     | expr . GREATER expr
   25     | expr . LESS expr
   26     | expr . GREATER_EQUAL expr
   27     | expr . LESS_EQUAL expr

    $default  reduce using rule 17 (expr)


State 122

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTI expr
   18     | expr . DIV expr
   18     | expr DIV expr .
   19     | expr . MOD expr
   20     | expr . AND expr
   21     | expr . OR expr
   22     | expr . EQUAL expr
   23     | expr . NEQUAL expr
   24     | expr . GREATER expr
   25     | expr . LESS expr
   26     | expr . GREATER_EQUAL expr
   27     | expr . LESS_EQUAL expr

    $default  reduce using rule 18 (expr)


State 123

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTI expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   19     | expr MOD expr .
   20     | expr . AND expr
   21     | expr . OR expr
   22     | expr . EQUAL expr
   23     | expr . NEQUAL expr
   24     | expr . GREATER expr
   25     | expr . LESS expr
   26     | expr . GREATER_EQUAL expr
   27     | expr . LESS_EQUAL expr

    $default  reduce using rule 19 (expr)


State 124

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTI expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . AND expr
   21     | expr . OR expr
   22     | expr . EQUAL expr
   22     | expr EQUAL expr .
   23     | expr . NEQUAL expr
   24     | expr . GREATER expr
   25     | expr . LESS expr
   26     | expr . GREATER_EQUAL expr
   27     | expr . LESS_EQUAL expr

    PLUS           shift, and go to state 74
    MINUS          shift, and go to state 75
    MULTI          shift, and go to state 76
    DIV            shift, and go to state 77
    MOD            shift, and go to state 78
    GREATER        shift, and go to state 81
    LESS           shift, and go to state 82
    GREATER_EQUAL  shift, and go to state 83
    LESS_EQUAL     shift, and go to state 84

    EQUAL   error (nonassociative)
    NEQUAL  error (nonassociative)

    $default  reduce using rule 22 (expr)


State 125

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTI expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . AND expr
   21     | expr . OR expr
   22     | expr . EQUAL expr
   23     | expr . NEQUAL expr
   23     | expr NEQUAL expr .
   24     | expr . GREATER expr
   25     | expr . LESS expr
   26     | expr . GREATER_EQUAL expr
   27     | expr . LESS_EQUAL expr

    PLUS           shift, and go to state 74
    MINUS          shift, and go to state 75
    MULTI          shift, and go to state 76
    DIV            shift, and go to state 77
    MOD            shift, and go to state 78
    GREATER        shift, and go to state 81
    LESS           shift, and go to state 82
    GREATER_EQUAL  shift, and go to state 83
    LESS_EQUAL     shift, and go to state 84

    EQUAL   error (nonassociative)
    NEQUAL  error (nonassociative)

    $default  reduce using rule 23 (expr)


State 126

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTI expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . AND expr
   21     | expr . OR expr
   22     | expr . EQUAL expr
   23     | expr . NEQUAL expr
   24     | expr . GREATER expr
   24     | expr GREATER expr .
   25     | expr . LESS expr
   26     | expr . GREATER_EQUAL expr
   27     | expr . LESS_EQUAL expr

    PLUS   shift, and go to state 74
    MINUS  shift, and go to state 75
    MULTI  shift, and go to state 76
    DIV    shift, and go to state 77
    MOD    shift, and go to state 78

    GREATER        error (nonassociative)
    LESS           error (nonassociative)
    GREATER_EQUAL  error (nonassociative)
    LESS_EQUAL     error (nonassociative)

    $default  reduce using rule 24 (expr)


State 127

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTI expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . AND expr
   21     | expr . OR expr
   22     | expr . EQUAL expr
   23     | expr . NEQUAL expr
   24     | expr . GREATER expr
   25     | expr . LESS expr
   25     | expr LESS expr .
   26     | expr . GREATER_EQUAL expr
   27     | expr . LESS_EQUAL expr

    PLUS   shift, and go to state 74
    MINUS  shift, and go to state 75
    MULTI  shift, and go to state 76
    DIV    shift, and go to state 77
    MOD    shift, and go to state 78

    GREATER        error (nonassociative)
    LESS           error (nonassociative)
    GREATER_EQUAL  error (nonassociative)
    LESS_EQUAL     error (nonassociative)

    $default  reduce using rule 25 (expr)


State 128

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTI expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . AND expr
   21     | expr . OR expr
   22     | expr . EQUAL expr
   23     | expr . NEQUAL expr
   24     | expr . GREATER expr
   25     | expr . LESS expr
   26     | expr . GREATER_EQUAL expr
   26     | expr GREATER_EQUAL expr .
   27     | expr . LESS_EQUAL expr

    PLUS   shift, and go to state 74
    MINUS  shift, and go to state 75
    MULTI  shift, and go to state 76
    DIV    shift, and go to state 77
    MOD    shift, and go to state 78

    GREATER        error (nonassociative)
    LESS           error (nonassociative)
    GREATER_EQUAL  error (nonassociative)
    LESS_EQUAL     error (nonassociative)

    $default  reduce using rule 26 (expr)


State 129

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTI expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . AND expr
   21     | expr . OR expr
   22     | expr . EQUAL expr
   23     | expr . NEQUAL expr
   24     | expr . GREATER expr
   25     | expr . LESS expr
   26     | expr . GREATER_EQUAL expr
   27     | expr . LESS_EQUAL expr
   27     | expr LESS_EQUAL expr .

    PLUS   shift, and go to state 74
    MINUS  shift, and go to state 75
    MULTI  shift, and go to state 76
    DIV    shift, and go to state 77
    MOD    shift, and go to state 78

    GREATER        error (nonassociative)
    LESS           error (nonassociative)
    GREATER_EQUAL  error (nonassociative)
    LESS_EQUAL     error (nonassociative)

    $default  reduce using rule 27 (expr)


State 130

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTI expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . AND expr
   21     | expr . OR expr
   22     | expr . EQUAL expr
   23     | expr . NEQUAL expr
   24     | expr . GREATER expr
   25     | expr . LESS expr
   26     | expr . GREATER_EQUAL expr
   27     | expr . LESS_EQUAL expr
   57 member: lvalue LEFT_SBRACKET expr . RIGHT_SBRACKET

    AND             shift, and go to state 72
    OR              shift, and go to state 73
    PLUS            shift, and go to state 74
    MINUS           shift, and go to state 75
    MULTI           shift, and go to state 76
    DIV             shift, and go to state 77
    MOD             shift, and go to state 78
    EQUAL           shift, and go to state 79
    NEQUAL          shift, and go to state 80
    GREATER         shift, and go to state 81
    LESS            shift, and go to state 82
    GREATER_EQUAL   shift, and go to state 83
    LESS_EQUAL      shift, and go to state 84
    RIGHT_SBRACKET  shift, and go to state 152


State 131

   65 normcall: LEFT_PARENTHES elist . RIGHT_PARENTHES

    RIGHT_PARENTHES  shift, and go to state 153


State 132

   56 member: lvalue DOT ID .

    $default  reduce using rule 56 (member)


State 133

   67 methodcall: DOTS ID . $@4 LEFT_PARENTHES elist RIGHT_PARENTHES

    $default  reduce using rule 66 ($@4)

    $@4  go to state 154


State 134

   30 assignexpr: lvalue $@1 ASSIGN . expr

    LOCAL           shift, and go to state 8
    TRUE            shift, and go to state 9
    FALSE           shift, and go to state 10
    NIL             shift, and go to state 11
    NOT             shift, and go to state 12
    MINUS           shift, and go to state 13
    PPLUS           shift, and go to state 14
    MMINUS          shift, and go to state 15
    NUMBER          shift, and go to state 16
    REALNUM         shift, and go to state 17
    ID              shift, and go to state 18
    STRING          shift, and go to state 19
    LEFT_SBRACKET   shift, and go to state 21
    LEFT_PARENTHES  shift, and go to state 22
    DCOLON          shift, and go to state 24

    expr        go to state 155
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36


State 135

   36 term: lvalue $@2 PPLUS .

    $default  reduce using rule 36 (term)


State 136

   39 term: lvalue $@3 MMINUS .

    $default  reduce using rule 39 (term)


State 137

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTI expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . AND expr
   21     | expr . OR expr
   22     | expr . EQUAL expr
   23     | expr . NEQUAL expr
   24     | expr . GREATER expr
   25     | expr . LESS expr
   26     | expr . GREATER_EQUAL expr
   27     | expr . LESS_EQUAL expr
   59 member: call LEFT_SBRACKET expr . RIGHT_SBRACKET

    AND             shift, and go to state 72
    OR              shift, and go to state 73
    PLUS            shift, and go to state 74
    MINUS           shift, and go to state 75
    MULTI           shift, and go to state 76
    DIV             shift, and go to state 77
    MOD             shift, and go to state 78
    EQUAL           shift, and go to state 79
    NEQUAL          shift, and go to state 80
    GREATER         shift, and go to state 81
    LESS            shift, and go to state 82
    GREATER_EQUAL   shift, and go to state 83
    LESS_EQUAL      shift, and go to state 84
    RIGHT_SBRACKET  shift, and go to state 156


State 138

   60 call: call LEFT_PARENTHES elist . RIGHT_PARENTHES

    RIGHT_PARENTHES  shift, and go to state 157


State 139

   58 member: call DOT ID .

    $default  reduce using rule 58 (member)


State 140

   97 ifstmt: ifstart stmt ELSE . $@14 stmt

    $default  reduce using rule 96 ($@14)

    $@14  go to state 158


State 141

   98 ifstart: IF LEFT_PARENTHES expr RIGHT_PARENTHES .

    $default  reduce using rule 98 (ifstart)


State 142

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTI expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . AND expr
   21     | expr . OR expr
   22     | expr . EQUAL expr
   23     | expr . NEQUAL expr
   24     | expr . GREATER expr
   25     | expr . LESS expr
   26     | expr . GREATER_EQUAL expr
   27     | expr . LESS_EQUAL expr
  101 whilestmt: WHILE LEFT_PARENTHES $@15 expr . RIGHT_PARENTHES $@16 stmt

    AND              shift, and go to state 72
    OR               shift, and go to state 73
    PLUS             shift, and go to state 74
    MINUS            shift, and go to state 75
    MULTI            shift, and go to state 76
    DIV              shift, and go to state 77
    MOD              shift, and go to state 78
    EQUAL            shift, and go to state 79
    NEQUAL           shift, and go to state 80
    GREATER          shift, and go to state 81
    LESS             shift, and go to state 82
    GREATER_EQUAL    shift, and go to state 83
    LESS_EQUAL       shift, and go to state 84
    RIGHT_PARENTHES  shift, and go to state 159


State 143

  105 forstmt: FOR LEFT_PARENTHES elist SEMICOLON . $@17 expr SEMICOLON $@18 elist RIGHT_PARENTHES $@19 stmt

    $default  reduce using rule 102 ($@17)

    $@17  go to state 160


State 144

   88 funcdef: FUNCTION ID $@9 LEFT_PARENTHES . $@10 idlist RIGHT_PARENTHES $@11 block

    $default  reduce using rule 86 ($@10)

    $@10  go to state 161


State 145

   84 funcdef: FUNCTION $@6 LEFT_PARENTHES $@7 . idlist RIGHT_PARENTHES $@8 block

    ID  shift, and go to state 162

    $default  reduce using rule 91 (idlist)

    idlist  go to state 163


State 146

   62 call: LEFT_PARENTHES funcdef RIGHT_PARENTHES . LEFT_PARENTHES elist RIGHT_PARENTHES

    LEFT_PARENTHES  shift, and go to state 151


State 147

   80 block: LEFT_CBRACKET $@5 stmt statements . RIGHT_CBRACKET

    RIGHT_CBRACKET  shift, and go to state 164


State 148

   77 indexedelem: LEFT_CBRACKET expr COLON . expr RIGHT_CBRACKET

    LOCAL           shift, and go to state 8
    TRUE            shift, and go to state 9
    FALSE           shift, and go to state 10
    NIL             shift, and go to state 11
    NOT             shift, and go to state 12
    MINUS           shift, and go to state 13
    PPLUS           shift, and go to state 14
    MMINUS          shift, and go to state 15
    NUMBER          shift, and go to state 16
    REALNUM         shift, and go to state 17
    ID              shift, and go to state 18
    STRING          shift, and go to state 19
    LEFT_SBRACKET   shift, and go to state 21
    LEFT_PARENTHES  shift, and go to state 22
    DCOLON          shift, and go to state 24

    expr        go to state 165
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36


State 149

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTI expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . AND expr
   21     | expr . OR expr
   22     | expr . EQUAL expr
   23     | expr . NEQUAL expr
   24     | expr . GREATER expr
   25     | expr . LESS expr
   26     | expr . GREATER_EQUAL expr
   27     | expr . LESS_EQUAL expr
   70 cexprs: COMMA expr . cexprs

    AND            shift, and go to state 72
    OR             shift, and go to state 73
    PLUS           shift, and go to state 74
    MINUS          shift, and go to state 75
    MULTI          shift, and go to state 76
    DIV            shift, and go to state 77
    MOD            shift, and go to state 78
    EQUAL          shift, and go to state 79
    NEQUAL         shift, and go to state 80
    GREATER        shift, and go to state 81
    LESS           shift, and go to state 82
    GREATER_EQUAL  shift, and go to state 83
    LESS_EQUAL     shift, and go to state 84
    COMMA          shift, and go to state 109

    $default  reduce using rule 71 (cexprs)

    cexprs  go to state 166


State 150

   75 clindexedelem: COMMA indexedelem . clindexedelem

    COMMA  shift, and go to state 113

    $default  reduce using rule 76 (clindexedelem)

    clindexedelem  go to state 167


State 151

   62 call: LEFT_PARENTHES funcdef RIGHT_PARENTHES LEFT_PARENTHES . elist RIGHT_PARENTHES

    LOCAL           shift, and go to state 8
    TRUE            shift, and go to state 9
    FALSE           shift, and go to state 10
    NIL             shift, and go to state 11
    NOT             shift, and go to state 12
    MINUS           shift, and go to state 13
    PPLUS           shift, and go to state 14
    MMINUS          shift, and go to state 15
    NUMBER          shift, and go to state 16
    REALNUM         shift, and go to state 17
    ID              shift, and go to state 18
    STRING          shift, and go to state 19
    LEFT_SBRACKET   shift, and go to state 21
    LEFT_PARENTHES  shift, and go to state 22
    DCOLON          shift, and go to state 24

    $default  reduce using rule 69 (elist)

    expr        go to state 63
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 168
    objectdef   go to state 36


State 152

   57 member: lvalue LEFT_SBRACKET expr RIGHT_SBRACKET .

    $default  reduce using rule 57 (member)


State 153

   65 normcall: LEFT_PARENTHES elist RIGHT_PARENTHES .

    $default  reduce using rule 65 (normcall)


State 154

   67 methodcall: DOTS ID $@4 . LEFT_PARENTHES elist RIGHT_PARENTHES

    LEFT_PARENTHES  shift, and go to state 169


State 155

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTI expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . AND expr
   21     | expr . OR expr
   22     | expr . EQUAL expr
   23     | expr . NEQUAL expr
   24     | expr . GREATER expr
   25     | expr . LESS expr
   26     | expr . GREATER_EQUAL expr
   27     | expr . LESS_EQUAL expr
   30 assignexpr: lvalue $@1 ASSIGN expr .

    AND            shift, and go to state 72
    OR             shift, and go to state 73
    PLUS           shift, and go to state 74
    MINUS          shift, and go to state 75
    MULTI          shift, and go to state 76
    DIV            shift, and go to state 77
    MOD            shift, and go to state 78
    EQUAL          shift, and go to state 79
    NEQUAL         shift, and go to state 80
    GREATER        shift, and go to state 81
    LESS           shift, and go to state 82
    GREATER_EQUAL  shift, and go to state 83
    LESS_EQUAL     shift, and go to state 84

    $default  reduce using rule 30 (assignexpr)


State 156

   59 member: call LEFT_SBRACKET expr RIGHT_SBRACKET .

    $default  reduce using rule 59 (member)


State 157

   60 call: call LEFT_PARENTHES elist RIGHT_PARENTHES .

    $default  reduce using rule 60 (call)


State 158

   97 ifstmt: ifstart stmt ELSE $@14 . stmt

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    FOR             shift, and go to state 3
    FUNCTION        shift, and go to state 4
    RETURN          shift, and go to state 5
    BREAK           shift, and go to state 6
    CONTINUE        shift, and go to state 7
    LOCAL           shift, and go to state 8
    TRUE            shift, and go to state 9
    FALSE           shift, and go to state 10
    NIL             shift, and go to state 11
    NOT             shift, and go to state 12
    MINUS           shift, and go to state 13
    PPLUS           shift, and go to state 14
    MMINUS          shift, and go to state 15
    NUMBER          shift, and go to state 16
    REALNUM         shift, and go to state 17
    ID              shift, and go to state 18
    STRING          shift, and go to state 19
    LEFT_CBRACKET   shift, and go to state 20
    LEFT_SBRACKET   shift, and go to state 21
    LEFT_PARENTHES  shift, and go to state 22
    SEMICOLON       shift, and go to state 23
    DCOLON          shift, and go to state 24

    stmt        go to state 170
    expr        go to state 28
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    block       go to state 37
    funcdef     go to state 38
    ifstmt      go to state 39
    ifstart     go to state 40
    whilestmt   go to state 41
    forstmt     go to state 42
    returnstmt  go to state 43


State 159

  101 whilestmt: WHILE LEFT_PARENTHES $@15 expr RIGHT_PARENTHES . $@16 stmt

    $default  reduce using rule 100 ($@16)

    $@16  go to state 171


State 160

  105 forstmt: FOR LEFT_PARENTHES elist SEMICOLON $@17 . expr SEMICOLON $@18 elist RIGHT_PARENTHES $@19 stmt

    LOCAL           shift, and go to state 8
    TRUE            shift, and go to state 9
    FALSE           shift, and go to state 10
    NIL             shift, and go to state 11
    NOT             shift, and go to state 12
    MINUS           shift, and go to state 13
    PPLUS           shift, and go to state 14
    MMINUS          shift, and go to state 15
    NUMBER          shift, and go to state 16
    REALNUM         shift, and go to state 17
    ID              shift, and go to state 18
    STRING          shift, and go to state 19
    LEFT_SBRACKET   shift, and go to state 21
    LEFT_PARENTHES  shift, and go to state 22
    DCOLON          shift, and go to state 24

    expr        go to state 172
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36


State 161

   88 funcdef: FUNCTION ID $@9 LEFT_PARENTHES $@10 . idlist RIGHT_PARENTHES $@11 block

    ID  shift, and go to state 162

    $default  reduce using rule 91 (idlist)

    idlist  go to state 173


State 162

   90 idlist: ID . $@12 cidlist

    $default  reduce using rule 89 ($@12)

    $@12  go to state 174


State 163

   84 funcdef: FUNCTION $@6 LEFT_PARENTHES $@7 idlist . RIGHT_PARENTHES $@8 block

    RIGHT_PARENTHES  shift, and go to state 175


State 164

   80 block: LEFT_CBRACKET $@5 stmt statements RIGHT_CBRACKET .

    $default  reduce using rule 80 (block)


State 165

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTI expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . AND expr
   21     | expr . OR expr
   22     | expr . EQUAL expr
   23     | expr . NEQUAL expr
   24     | expr . GREATER expr
   25     | expr . LESS expr
   26     | expr . GREATER_EQUAL expr
   27     | expr . LESS_EQUAL expr
   77 indexedelem: LEFT_CBRACKET expr COLON expr . RIGHT_CBRACKET

    AND             shift, and go to state 72
    OR              shift, and go to state 73
    PLUS            shift, and go to state 74
    MINUS           shift, and go to state 75
    MULTI           shift, and go to state 76
    DIV             shift, and go to state 77
    MOD             shift, and go to state 78
    EQUAL           shift, and go to state 79
    NEQUAL          shift, and go to state 80
    GREATER         shift, and go to state 81
    LESS            shift, and go to state 82
    GREATER_EQUAL   shift, and go to state 83
    LESS_EQUAL      shift, and go to state 84
    RIGHT_CBRACKET  shift, and go to state 176


State 166

   70 cexprs: COMMA expr cexprs .

    $default  reduce using rule 70 (cexprs)


State 167

   75 clindexedelem: COMMA indexedelem clindexedelem .

    $default  reduce using rule 75 (clindexedelem)


State 168

   62 call: LEFT_PARENTHES funcdef RIGHT_PARENTHES LEFT_PARENTHES elist . RIGHT_PARENTHES

    RIGHT_PARENTHES  shift, and go to state 177


State 169

   67 methodcall: DOTS ID $@4 LEFT_PARENTHES . elist RIGHT_PARENTHES

    LOCAL           shift, and go to state 8
    TRUE            shift, and go to state 9
    FALSE           shift, and go to state 10
    NIL             shift, and go to state 11
    NOT             shift, and go to state 12
    MINUS           shift, and go to state 13
    PPLUS           shift, and go to state 14
    MMINUS          shift, and go to state 15
    NUMBER          shift, and go to state 16
    REALNUM         shift, and go to state 17
    ID              shift, and go to state 18
    STRING          shift, and go to state 19
    LEFT_SBRACKET   shift, and go to state 21
    LEFT_PARENTHES  shift, and go to state 22
    DCOLON          shift, and go to state 24

    $default  reduce using rule 69 (elist)

    expr        go to state 63
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 178
    objectdef   go to state 36


State 170

   97 ifstmt: ifstart stmt ELSE $@14 stmt .

    $default  reduce using rule 97 (ifstmt)


State 171

  101 whilestmt: WHILE LEFT_PARENTHES $@15 expr RIGHT_PARENTHES $@16 . stmt

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    FOR             shift, and go to state 3
    FUNCTION        shift, and go to state 4
    RETURN          shift, and go to state 5
    BREAK           shift, and go to state 6
    CONTINUE        shift, and go to state 7
    LOCAL           shift, and go to state 8
    TRUE            shift, and go to state 9
    FALSE           shift, and go to state 10
    NIL             shift, and go to state 11
    NOT             shift, and go to state 12
    MINUS           shift, and go to state 13
    PPLUS           shift, and go to state 14
    MMINUS          shift, and go to state 15
    NUMBER          shift, and go to state 16
    REALNUM         shift, and go to state 17
    ID              shift, and go to state 18
    STRING          shift, and go to state 19
    LEFT_CBRACKET   shift, and go to state 20
    LEFT_SBRACKET   shift, and go to state 21
    LEFT_PARENTHES  shift, and go to state 22
    SEMICOLON       shift, and go to state 23
    DCOLON          shift, and go to state 24

    stmt        go to state 179
    expr        go to state 28
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    block       go to state 37
    funcdef     go to state 38
    ifstmt      go to state 39
    ifstart     go to state 40
    whilestmt   go to state 41
    forstmt     go to state 42
    returnstmt  go to state 43


State 172

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MULTI expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . AND expr
   21     | expr . OR expr
   22     | expr . EQUAL expr
   23     | expr . NEQUAL expr
   24     | expr . GREATER expr
   25     | expr . LESS expr
   26     | expr . GREATER_EQUAL expr
   27     | expr . LESS_EQUAL expr
  105 forstmt: FOR LEFT_PARENTHES elist SEMICOLON $@17 expr . SEMICOLON $@18 elist RIGHT_PARENTHES $@19 stmt

    AND            shift, and go to state 72
    OR             shift, and go to state 73
    PLUS           shift, and go to state 74
    MINUS          shift, and go to state 75
    MULTI          shift, and go to state 76
    DIV            shift, and go to state 77
    MOD            shift, and go to state 78
    EQUAL          shift, and go to state 79
    NEQUAL         shift, and go to state 80
    GREATER        shift, and go to state 81
    LESS           shift, and go to state 82
    GREATER_EQUAL  shift, and go to state 83
    LESS_EQUAL     shift, and go to state 84
    SEMICOLON      shift, and go to state 180


State 173

   88 funcdef: FUNCTION ID $@9 LEFT_PARENTHES $@10 idlist . RIGHT_PARENTHES $@11 block

    RIGHT_PARENTHES  shift, and go to state 181


State 174

   90 idlist: ID $@12 . cidlist

    COMMA  shift, and go to state 182

    $default  reduce using rule 94 (cidlist)

    cidlist  go to state 183


State 175

   84 funcdef: FUNCTION $@6 LEFT_PARENTHES $@7 idlist RIGHT_PARENTHES . $@8 block

    $default  reduce using rule 83 ($@8)

    $@8  go to state 184


State 176

   77 indexedelem: LEFT_CBRACKET expr COLON expr RIGHT_CBRACKET .

    $default  reduce using rule 77 (indexedelem)


State 177

   62 call: LEFT_PARENTHES funcdef RIGHT_PARENTHES LEFT_PARENTHES elist RIGHT_PARENTHES .

    $default  reduce using rule 62 (call)


State 178

   67 methodcall: DOTS ID $@4 LEFT_PARENTHES elist . RIGHT_PARENTHES

    RIGHT_PARENTHES  shift, and go to state 185


State 179

  101 whilestmt: WHILE LEFT_PARENTHES $@15 expr RIGHT_PARENTHES $@16 stmt .

    $default  reduce using rule 101 (whilestmt)


State 180

  105 forstmt: FOR LEFT_PARENTHES elist SEMICOLON $@17 expr SEMICOLON . $@18 elist RIGHT_PARENTHES $@19 stmt

    $default  reduce using rule 103 ($@18)

    $@18  go to state 186


State 181

   88 funcdef: FUNCTION ID $@9 LEFT_PARENTHES $@10 idlist RIGHT_PARENTHES . $@11 block

    $default  reduce using rule 87 ($@11)

    $@11  go to state 187


State 182

   93 cidlist: COMMA . ID $@13 cidlist

    ID  shift, and go to state 188


State 183

   90 idlist: ID $@12 cidlist .

    $default  reduce using rule 90 (idlist)


State 184

   84 funcdef: FUNCTION $@6 LEFT_PARENTHES $@7 idlist RIGHT_PARENTHES $@8 . block

    LEFT_CBRACKET  shift, and go to state 20

    block  go to state 189


State 185

   67 methodcall: DOTS ID $@4 LEFT_PARENTHES elist RIGHT_PARENTHES .

    $default  reduce using rule 67 (methodcall)


State 186

  105 forstmt: FOR LEFT_PARENTHES elist SEMICOLON $@17 expr SEMICOLON $@18 . elist RIGHT_PARENTHES $@19 stmt

    LOCAL           shift, and go to state 8
    TRUE            shift, and go to state 9
    FALSE           shift, and go to state 10
    NIL             shift, and go to state 11
    NOT             shift, and go to state 12
    MINUS           shift, and go to state 13
    PPLUS           shift, and go to state 14
    MMINUS          shift, and go to state 15
    NUMBER          shift, and go to state 16
    REALNUM         shift, and go to state 17
    ID              shift, and go to state 18
    STRING          shift, and go to state 19
    LEFT_SBRACKET   shift, and go to state 21
    LEFT_PARENTHES  shift, and go to state 22
    DCOLON          shift, and go to state 24

    $default  reduce using rule 69 (elist)

    expr        go to state 63
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 190
    objectdef   go to state 36


State 187

   88 funcdef: FUNCTION ID $@9 LEFT_PARENTHES $@10 idlist RIGHT_PARENTHES $@11 . block

    LEFT_CBRACKET  shift, and go to state 20

    block  go to state 191


State 188

   93 cidlist: COMMA ID . $@13 cidlist

    $default  reduce using rule 92 ($@13)

    $@13  go to state 192


State 189

   84 funcdef: FUNCTION $@6 LEFT_PARENTHES $@7 idlist RIGHT_PARENTHES $@8 block .

    $default  reduce using rule 84 (funcdef)


State 190

  105 forstmt: FOR LEFT_PARENTHES elist SEMICOLON $@17 expr SEMICOLON $@18 elist . RIGHT_PARENTHES $@19 stmt

    RIGHT_PARENTHES  shift, and go to state 193


State 191

   88 funcdef: FUNCTION ID $@9 LEFT_PARENTHES $@10 idlist RIGHT_PARENTHES $@11 block .

    $default  reduce using rule 88 (funcdef)


State 192

   93 cidlist: COMMA ID $@13 . cidlist

    COMMA  shift, and go to state 182

    $default  reduce using rule 94 (cidlist)

    cidlist  go to state 194


State 193

  105 forstmt: FOR LEFT_PARENTHES elist SEMICOLON $@17 expr SEMICOLON $@18 elist RIGHT_PARENTHES . $@19 stmt

    $default  reduce using rule 104 ($@19)

    $@19  go to state 195


State 194

   93 cidlist: COMMA ID $@13 cidlist .

    $default  reduce using rule 93 (cidlist)


State 195

  105 forstmt: FOR LEFT_PARENTHES elist SEMICOLON $@17 expr SEMICOLON $@18 elist RIGHT_PARENTHES $@19 . stmt

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    FOR             shift, and go to state 3
    FUNCTION        shift, and go to state 4
    RETURN          shift, and go to state 5
    BREAK           shift, and go to state 6
    CONTINUE        shift, and go to state 7
    LOCAL           shift, and go to state 8
    TRUE            shift, and go to state 9
    FALSE           shift, and go to state 10
    NIL             shift, and go to state 11
    NOT             shift, and go to state 12
    MINUS           shift, and go to state 13
    PPLUS           shift, and go to state 14
    MMINUS          shift, and go to state 15
    NUMBER          shift, and go to state 16
    REALNUM         shift, and go to state 17
    ID              shift, and go to state 18
    STRING          shift, and go to state 19
    LEFT_CBRACKET   shift, and go to state 20
    LEFT_SBRACKET   shift, and go to state 21
    LEFT_PARENTHES  shift, and go to state 22
    SEMICOLON       shift, and go to state 23
    DCOLON          shift, and go to state 24

    stmt        go to state 196
    expr        go to state 28
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    block       go to state 37
    funcdef     go to state 38
    ifstmt      go to state 39
    ifstart     go to state 40
    whilestmt   go to state 41
    forstmt     go to state 42
    returnstmt  go to state 43


State 196

  105 forstmt: FOR LEFT_PARENTHES elist SEMICOLON $@17 expr SEMICOLON $@18 elist RIGHT_PARENTHES $@19 stmt .

    $default  reduce using rule 105 (forstmt)
